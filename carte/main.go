package main

import (
	"fmt"
	"os"
	"os/exec"
)

var world = []string{
	"#####################################################",
	"#        „É≠      #           #     #                #",
	"#                #        #  #  #  #      #         #",
	"#  ############  #        #  #  #  #  #####         #",
	"#             #  # ########  #  #  #   ‚öóÔ∏è  #         #",
	"##########    #  #        #  #  #  #      #         #",
	"#             #  #######-##  #  #  #####  #         #",
	"##########    #  #        #  #  #  #      #         #",
	"#             #  # $      #  #  #  #  #   #         #",
	"#       #        #        #  #  #  #  #   #   üõÅ    #",
	"#       #   ##########   ##  #  #  #  #   #         #",
	"#   „É≠  #                 #     #     #   #         #",
	"#####################################################",
}

var playerX, playerY = 1, 6

func main() {
	for {
		clear()
		draw()
		var input string
		fmt.Scanln(&input)

		newX, newY := playerX, playerY
		switch input {
		case "z":
			newY--
		case "s":
			newY++
		case "q":
			newX--
		case "d":
			newX++
		case "x":
			fmt.Println("Meilleur qu'Ubisoft mdr")
			return
		}

		if world[newY][newX] != '#' {
			// Syst√®me d'√©nigme sur la porte '-'
			if world[newY][newX] == '-' {
				if enigmePorte() {
					playerX, playerY = newX, newY
				} else {
					fmt.Println("La porte reste ferm√©e. Appuie sur Entr√©e pour r√©essayer...")
					fmt.Scanln()
				}
			} else {
				playerX, playerY = newX, newY
				// D√©clencheur d'√©v√©nement : combat uniquement aux coordonn√©es (x=4, y=11)
				if playerX == 4 && playerY == 11 {
					lancerCombat()
				}
			}
			playerX, playerY = newX, newY
			// D√©clencheur d'√©v√©nement : combat uniquement aux coordonn√©es (x=4, y=11)
			if playerX == 18 && playerY == 4 {
				lancerCombatSkelly()
			}
		}

	}
}

func lancerCombatSkelly() {
	fmt.Println("\033[33mDevant vous une horde de squelette. un sans jambe rampe sans but, un autre sans bras cours en rond, et un dernier semble plus mena√ßant arm√© d'une √©p√©e rouill√© et d'un casque.\033[0m")
	fmt.Println()
	fmt.Println("\033[33mUn cr√¢ne au vous regarde et dis :\033[0m")
	fmt.Println("¬´Kakakaka te revoila Len..., oh! Non. Qui es tu ? ¬ª")
	fmt.Println("\033[31mATTAQUE LE !!!\033[0m")
	content, err := os.ReadFile("skelly.txt")
	if err != nil {
		fmt.Println("Erreur de lecture du fichier :", err)
		return
	}
	fmt.Printf("\033[97m%s\033[0m\n", string(content))

	// ici logique reel de combat tah pokemon
	fmt.Println("(Simulation du combat...)")
	fmt.Println("Le combat est termin√© !")
	fmt.Println("Appuie sur Entr√©e pour continuer...")
	playerY = 1
	playerX = 27
	fmt.Scanln()
}

// Fonction simulant le lancement d'un combat
func lancerCombat() {
	fmt.Println("\033[33mVous trouvez un coffre :\033[0m")
	fmt.Println("Le coffre s'agite, et s'ouvre revelant une gueule b√©ante et des dents ac√©r√©s, s'ouvre alors des yeux mauvais")
	fmt.Println("Un mimic dardant sa langue s'apprete a vous d√©vorer.")
	content, err := os.ReadFile("mimic.txt")
	if err != nil {
		fmt.Println("Erreur de lecture du fichier :", err)
		return
	}
	fmt.Printf("\033[38;5;130m%s\033[0m\n", string(content))

	fmt.Println("Roll for initiative")
	// ici logique reel de combat tah pokemon
	fmt.Println("(Simulation du combat...)")
	fmt.Println("Le combat est termin√© !")
	fmt.Println("Appuie sur Entr√©e pour continuer...")
	fmt.Scanln()
}
func draw() {
	for y, line := range world {
		for x, char := range line {
			if x == playerX && y == playerY {
				fmt.Print("\033[34m¬§\033[0m")
			} else if char == '#' {
				fmt.Print("\033[30m#\033[0m")
			} else {
				fmt.Print(string(char))
			}
		}
		fmt.Println()
	}
}

func clear() {
	cmd := exec.Command("clear")
	cmd.Stdout = os.Stdout
	cmd.Run()
}

func enigmePorte() bool {
	fmt.Println("Une porte devant vous barre votre chemin.")
	fmt.Println("Elle ne pr√©sente ni serrure ni poign√©e, mais une t√™te de sphinx.")
	fmt.Println("Ses yeux rouges s'allument et une voix r√©sonne alors :")
	fmt.Println()
	fmt.Println("¬´ Jamais je ne suis loin de mon autre jumelle,\non m'associe souvent au parfum vomitif d'une partie du corps\nqui n'est pas vraiment belle, localis√©e fort loin de l'organe olfactif. ¬ª")
	fmt.Println()
	fmt.Print("Quelle est votre r√©ponse ? ")
	var reponse string
	fmt.Scanln(&reponse)
	if reponse == "chaussette" || reponse == "Chaussette" {
		fmt.Println("La porte s'ouvre lentement dans un grincement sinistre...")
		return true
	}
	fmt.Println("Mauvaise r√©ponse !")
	return false
}
